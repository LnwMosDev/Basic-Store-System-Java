/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.company2566;

import java.awt.Event;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ItemType extends javax.swing.JFrame {

    /**
     * Creates new form ItemType
     */
    Connection conn=null;
    Statement statement=null;
   
    
    public ItemType() {
        initComponents();
        ConnectDatabase();
        
        showTableDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bNew = new javax.swing.JButton();
        bShow = new javax.swing.JButton();
        TypeCode = new javax.swing.JTextField();
        TypeName = new javax.swing.JTextField();
        bClose = new javax.swing.JButton();
        bInsert = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Code");

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Name");

        bNew.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        bNew.setText("New");
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        bShow.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        bShow.setText("Show");
        bShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bShowActionPerformed(evt);
            }
        });

        TypeCode.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        TypeCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TypeCodeKeyPressed(evt);
            }
        });

        TypeName.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N

        bClose.setText("Close");
        bClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });

        bInsert.setText("insert");
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });

        bUpdate.setText("update");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(bDelete))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(bNew)
                        .addGap(37, 37, 37)
                        .addComponent(bShow)
                        .addGap(51, 51, 51)
                        .addComponent(bClose))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(180, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TypeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bUpdate)
                        .addComponent(bDelete))
                    .addComponent(bInsert))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNew)
                    .addComponent(bShow)
                    .addComponent(bClose))
                .addGap(60, 60, 60)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cit3535", "root", "");
                statement=conn.createStatement();
                  System.out.println("success");
            } catch (SQLException ex) {
                System.out.println("un success1 ");
            }
        } catch (ClassNotFoundException Ex) {
             System.out.println("un success2");
        }
        
    }
    
    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
     TypeCode.setText(null);
     TypeName.setText("");
     TypeCode.requestFocus();
    }//GEN-LAST:event_bNewActionPerformed

    private void bShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bShowActionPerformed
// System.out.print(ItemCode.getText()+","+ItemName.getText());
//  System.out.println(ItemName.getText());
 JOptionPane.showMessageDialog(this,TypeCode.getText()+","+TypeName.getText());
  
    }//GEN-LAST:event_bShowActionPerformed

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCloseActionPerformed
      int pressed=JOptionPane.showConfirmDialog(null, "Exit", "ออก ?", JOptionPane.YES_NO_OPTION);
      if(pressed==0){
      this.dispose();
      }
    }//GEN-LAST:event_bCloseActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        String insert = "INSERT INTO itemtype VALUES ("+TypeCode.getText()+",'"+TypeName.getText()+"');";
        try{
            statement.executeUpdate(insert );
            showTableDB();
            System.out.println("success");
        }catch(Exception Ex){System.out.print("Error"+insert );}
    }//GEN-LAST:event_bInsertActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed

        String delete = "DELETE FROM itemtype WHERE typeCode=("+ TypeCode.getText()+")";
        try{
            statement.executeUpdate(delete );
            showTableDB();
            System.out.println("success");
        }catch(Exception Ex){System.out.print("Error"+delete);}
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
       String update = "UPDATE itemtype SET typeName='" + TypeName.getText() + "' WHERE typeCode='" + TypeCode.getText() + "'";
try {
    statement.executeUpdate(update);
    showTableDB();
    System.out.println("Update success");
} catch (Exception ex) {
    System.out.print("Update Error" + ex.getMessage());
}
    }//GEN-LAST:event_bUpdateActionPerformed

    private void TypeCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TypeCodeKeyPressed
        if (evt.getKeyCode() == Event.ENTER) {
            String sql = "select * from itemtype WHERE typeCode='" + TypeCode.getText() + "'";
            try {
                ResultSet rs = statement.executeQuery(sql);
                while (rs.next()) {
                    TypeName.setText(rs.getString("typeName"));
                }
                rs.close();
            } catch (SQLException ex) {
            }
    }     
    }
    
        private void showTableDB(){
     try {
            DefaultTableModel tableModel=new DefaultTableModel(); 
          Object[] header={"typeCode","typeName"};
            tableModel.setColumnIdentifiers(header);
        jTable2.setModel( tableModel);
         
            ResultSet r = statement.executeQuery("select * from itemtype order by typeCode");
//            DefaultTableModel tableModel1=(DefaultTableModel)jTable2.getModel(); 
//            tableModel1.setRowCount(0);
            while (r.next()) {
                tableModel.addRow(new String[]{r.getString("typeCode"),r.getString("typeName")});
            }
            r.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to Connect to Database", 
                    "Error Connection", JOptionPane.WARNING_MESSAGE);
            System.exit(0);
        }
 
    }//GEN-LAST:event_TypeCodeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        String[] id = new String[3];
//        String[] name = new String[3];
//        String[] sex = new String[3];
//        String[] program = new String[3];
//        String text = "";
//
//        for (int i = 0; i < 3; i++) {
//            JOptionPane.showInputDialog("Student Name");
//            id[i] = JOptionPane.showInputDialog("id");
//            name[i] = JOptionPane.showInputDialog("name");
//            sex[i] = JOptionPane.showInputDialog("sex", "F");
//            do {
//                program[i] = JOptionPane.showInputDialog("Program");
//            } while (program[i].isEmpty());
//        }
//        for (int i = 0; i < id.length; i++) {
//            text += id[i] + "\n" + name[i] + "\n" + sex[i] + "\n" + program[i] + "\n--------------\n";
//        }
//        JOptionPane.showMessageDialog(null, text);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemType().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TypeCode;
    private javax.swing.JTextField TypeName;
    private javax.swing.JButton bClose;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bNew;
    private javax.swing.JButton bShow;
    private javax.swing.JButton bUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
